<%@ val home : String%>
#if (home == "on")
  <div class="chart"></div>
#else
  <div class="graphArea" id="readsArea"></div>
#end

<script>
function home(dictionary){
  //Render read summary visualization on the home screen at startup 
  var namelist=[];
  var lengthlist=[];
  var totalLength=0;
  var dataset = [];
  for (i = 0; i < dictionary.length; i++) { 
   var range = dictionary[i].split(":")[1].split("-");
   var length = parseInt(range[1]-range[0]);
   var name = dictionary[i].split(":")[0];
   dataset.push({name: name, length: length });
   namelist.push(name);
   lengthlist.push(length);
   totalLength+=length;
  }

  // Sorting by numerical value and not lexical order
  dataset.sort(function(a, b){return b.length-a.length}); 
  
  // Can end range with d3.max(lengthlist) = 249250621 or something smaller (fit in screen)
  var x = d3.scale.linear()
    .domain([0, 120])
    .range([0, 150000]);
  
  var chart  = d3.select(".chart")
    .selectAll("div")
    .data(dataset)
    .enter().append("div")
    .style("width", function(d) { return x(d.length)/d3.max(lengthlist) + "px"; })
    .text(function(d) { return d.name; });

  var path  = d3.select(".chart")
                .selectAll("div")
                .data(dataset);
  
  path.on('click', function(d) {
    var start = Math.round(d.length/2.);
    var end =  Math.round(d.length/2. +1000);
    document.getElementById("autocomplete").value = d.name+":"+start.toString()+"-"+end;
    render(d.name, start,end, 50); 
  });  

  path.on('mouseover', function(d,i) {                              
    path[0][i].style.backgroundColor = "red";
  });     

  path.on('mouseout', function(d,i) {                              
    path[0][i].style.backgroundColor = "steelblue";
  });     
}
</script>